---
# tasks file for ansible-role-dotfiles

- name: Set path-related facts.
  set_fact:
    dotfiles_home_dir: "{{ dotfiles_home }}/{{ dotfiles_owner }}"
    dotfiles_config_segment: "/{{ dotfiles_conf_dir }}/{{ dotfiles_repo_name }}"

- name: Set git repo dest fact.
  set_fact:
    dotfiles_repo_dest: "{{ dotfiles_home_dir }}{{ dotfiles_config_segment }}"

- name: Clone dotfiles repo to host.
  git:
    repo: "{{ dotfiles_repo_repo }}"
    dest: "{{ dotfiles_repo_dest }}"
    version: master
    clone: true

- name: Fix permissions on newly cloned repository.
  file:
    path: "{{ dotfiles_repo_dest }}"
    state: directory
    recurse: true
    owner: "{{ dotfiles_owner }}"
    group: "{{ dotfiles_group }}"
  changed_when: false

- name: Find files in newly cloned repository.
  command: >
    find "{{ dotfiles_repo_dest }}" -type f
    ! -path "{{ dotfiles_repo_dest }}/.git/*"
  changed_when: false
  register: dotfiles_paths

- name: Create required config directories.
  file:
    path: "{{ item | replace(dotfiles_config_segment, '') | dirname }}"
    state: directory
    owner: "{{ dotfiles_owner }}"
    group: "{{ dotfiles_group }}"
  with_items: "{{ dotfiles_paths.stdout_lines }}"
  when: "item | basename in dotfiles_whitelist"

- name: Link dotfiles into place.
  file:
    src: "{{ item }}"
    dest: "{{ item | replace(dotfiles_config_segment, '') }}"
    state: link
    owner: "{{ dotfiles_owner }}"
    group: "{{ dotfiles_group }}"
  with_items: "{{ dotfiles_paths.stdout_lines }}"
  when: "item | basename in dotfiles_whitelist"
