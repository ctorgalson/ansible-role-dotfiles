---
# Dotfile clone tasks for ansible-role-dotfiles.

- name: Set path-related facts per dotfile repo.
  ansible.builtin.set_fact:
    dotfiles_user_dir: "/{{ dotfiles_home_dir }}/{{ dotfiles_repo.owner }}"
    dotfiles_config_segment: "/{{ dotfiles_conf_dir }}/{{ dotfiles_repo.name }}"

- name: Set repository clone destination.
  ansible.builtin.set_fact:
    dotfiles_repo_dest: "{{ dotfiles_user_dir }}{{ dotfiles_config_segment }}"

- name: Make sure we have usable allowlist and denylist, even if empty.
  ansible.builtin.set_fact:
    dotfiles_allowlist: "{{ dotfiles_repo.allowlist | default([]) }}"
    dotfiles_denylist: "{{ dotfiles_repo.denylist | default([]) }}"

- name: Clone directories into a specified location.
  ansible.builtin.block:
    - name: Ensure dotfiles_conf_dir exists.
      file:
        path: "{{ dotfiles_repo_dest | dirname }}"
        owner: "{{ dotfiles_repo.owner }}"
        group: "{{ dotfiles_repo.group }}"
        state: directory

    - name: Clone dotfiles repo into place.
      ansible.builtin.git:
        repo: "{{ dotfiles_repo.repo }}"
        dest: "{{ dotfiles_repo_dest }}"
        version: "{{ dotfiles_repo.version | default('master') }}"
        clone: true
        key_file: "{{ dotfiles_repo.key_file | default(omit) }}"
        recursive: false
        accept_hostkey: true
      become: true
      become_user: "{{ dotfiles_repo.owner }}"

    - name: Make sure dotfiles repo has the correct ownership.
      ansible.builtin.file:
        path: "{{ dotfiles_repo_dest }}"
        owner: "{{ dotfiles_repo.owner }}"
        group: "{{ dotfiles_repo.group }}"
        recurse: true
        state: directory
      changed_when: false

# Symlinking operations.

- name: Discover files and symlink them.
  block:
    - name: Find files in newly cloned repository.
      ansible.builtin.command: >
        find "{{ dotfiles_repo_dest }}"
        ! -type l
        ! -type d
        ! -path "{{ dotfiles_repo_dest }}"
        ! -path "{{ dotfiles_repo_dest }}/.git/*"
        ! -path "{{ dotfiles_repo_dest }}/README.md"
      changed_when: false
      register: dotfiles_repo_paths

    - name: Symlink dotfiles.
      ansible.builtin.include_tasks: "symlink-dotfiles.yml"
      loop: "{{ dotfiles_repo_paths.stdout_lines }}"
      loop_control:
        loop_var: dotfiles_repo_path
